<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="30" passed="30" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-03T09:39:05 IST" name="mysuite" finished-at="2024-04-03T09:44:17 IST" duration-ms="312149">
    <groups>
    </groups>
    <test started-at="2024-04-03T09:39:05 IST" name="ChromeTest" finished-at="2024-04-03T09:41:42 IST" duration-ms="157671">
      <class name="testScenario.Global_IT">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:39:05 IST" name="setUp" finished-at="2024-04-03T09:39:13 IST" duration-ms="8304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="captureUserInfo()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:39:13 IST" name="captureUserInfo" finished-at="2024-04-03T09:40:05 IST" duration-ms="52048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureUserInfo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:05 IST" name="getResult" finished-at="2024-04-03T09:40:05 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=captureUserInfo status=SUCCESS method=Global_IT.captureUserInfo()[pri:0, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:05 IST" name="endReport" finished-at="2024-04-03T09:40:06 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="clickOnIT()[pri:1, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:06 IST" name="clickOnIT" finished-at="2024-04-03T09:40:16 IST" duration-ms="10604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnIT -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:16 IST" name="getResult" finished-at="2024-04-03T09:40:20 IST" duration-ms="3485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnIT status=SUCCESS method=Global_IT.clickOnIT()[pri:1, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:20 IST" name="endReport" finished-at="2024-04-03T09:40:20 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="exploreApps()[pri:2, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:20 IST" name="exploreApps" finished-at="2024-04-03T09:40:51 IST" duration-ms="31407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exploreApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:51 IST" name="getResult" finished-at="2024-04-03T09:40:52 IST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exploreApps status=SUCCESS method=Global_IT.exploreApps()[pri:2, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:52 IST" name="endReport" finished-at="2024-04-03T09:40:52 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:52 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:40:52 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IT Outage Alert]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IT Outage Alerts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:52 IST" name="getResult" finished-at="2024-04-03T09:40:53 IST" duration-ms="786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:53 IST" name="endReport" finished-at="2024-04-03T09:40:53 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:53 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:40:53 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Microsoft Teams]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Microsoft Teams]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:53 IST" name="getResult" finished-at="2024-04-03T09:40:53 IST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:53 IST" name="endReport" finished-at="2024-04-03T09:40:53 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:53 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:40:53 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[One Drive]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[One Drive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:53 IST" name="getResult" finished-at="2024-04-03T09:40:54 IST" duration-ms="244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="endReport" finished-at="2024-04-03T09:40:54 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:40:54 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global IT Internal Events]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Global IT Internal Events]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="getResult" finished-at="2024-04-03T09:40:54 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="endReport" finished-at="2024-04-03T09:40:54 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:40:54 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global Information Technology Documents]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[S&T Policy Hub]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="getResult" finished-at="2024-04-03T09:40:54 IST" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="endReport" finished-at="2024-04-03T09:40:54 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="verifyNewsAvailability()[pri:4, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:54 IST" name="verifyNewsAvailability" finished-at="2024-04-03T09:40:56 IST" duration-ms="1274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewsAvailability -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:56 IST" name="getResult" finished-at="2024-04-03T09:40:56 IST" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNewsAvailability status=SUCCESS method=Global_IT.verifyNewsAvailability()[pri:4, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:56 IST" name="endReport" finished-at="2024-04-03T09:40:56 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="verifyAwardsAvailability()[pri:5, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:56 IST" name="verifyAwardsAvailability" finished-at="2024-04-03T09:40:56 IST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAwardsAvailability -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:56 IST" name="getResult" finished-at="2024-04-03T09:40:56 IST" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAwardsAvailability status=SUCCESS method=Global_IT.verifyAwardsAvailability()[pri:5, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:56 IST" name="endReport" finished-at="2024-04-03T09:40:56 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayNewsCount()[pri:6, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:56 IST" name="displayNewsCount" finished-at="2024-04-03T09:40:57 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayNewsCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:57 IST" name="getResult" finished-at="2024-04-03T09:40:57 IST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayNewsCount status=SUCCESS method=Global_IT.displayNewsCount()[pri:6, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:57 IST" name="endReport" finished-at="2024-04-03T09:40:57 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateNewsHeaderAndTooltip()[pri:7, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:57 IST" name="validateNewsHeaderAndTooltip" finished-at="2024-04-03T09:40:57 IST" duration-ms="381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateNewsHeaderAndTooltip -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:57 IST" name="getResult" finished-at="2024-04-03T09:40:57 IST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNewsHeaderAndTooltip status=SUCCESS method=Global_IT.validateNewsHeaderAndTooltip()[pri:7, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:57 IST" name="endReport" finished-at="2024-04-03T09:40:57 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:40:58 IST" name="displayAwards" data-provider="awards" finished-at="2024-04-03T09:41:08 IST" duration-ms="10597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rishabh Raj becomes EC Council Disaster Recovery Professional]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayAwards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:08 IST" name="getResult" finished-at="2024-04-03T09:41:08 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayAwards status=SUCCESS method=Global_IT.displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:08 IST" name="endReport" finished-at="2024-04-03T09:41:08 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:08 IST" name="displayAwards" data-provider="awards" finished-at="2024-04-03T09:41:19 IST" duration-ms="11060" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IT Team Wins Two Awards at the DevOps India Summit 2023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayAwards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:19 IST" name="getResult" finished-at="2024-04-03T09:41:20 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayAwards status=SUCCESS method=Global_IT.displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:20 IST" name="endReport" finished-at="2024-04-03T09:41:20 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:20 IST" name="displayAwards" data-provider="awards" finished-at="2024-04-03T09:41:31 IST" duration-ms="11127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CInsights Wins the Prestigious Brandon Hall Award]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayAwards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:31 IST" name="getResult" finished-at="2024-04-03T09:41:31 IST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayAwards status=SUCCESS method=Global_IT.displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:31 IST" name="endReport" finished-at="2024-04-03T09:41:31 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method is-config="true" signature="closeBrow()[pri:0, instance:testScenario.Global_IT@57a78e3]" started-at="2024-04-03T09:41:31 IST" name="closeBrow" finished-at="2024-04-03T09:41:42 IST" duration-ms="11241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrow -->
      </class> <!-- testScenario.Global_IT -->
    </test> <!-- ChromeTest -->
    <test started-at="2024-04-03T09:41:42 IST" name="EdgeTest" finished-at="2024-04-03T09:44:17 IST" duration-ms="154441">
      <class name="testScenario.Global_IT">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:41:42 IST" name="setUp" finished-at="2024-04-03T09:41:51 IST" duration-ms="8292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="captureUserInfo()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:41:51 IST" name="captureUserInfo" finished-at="2024-04-03T09:42:41 IST" duration-ms="50692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureUserInfo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:42:41 IST" name="getResult" finished-at="2024-04-03T09:42:42 IST" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=captureUserInfo status=SUCCESS method=Global_IT.captureUserInfo()[pri:0, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:42:42 IST" name="endReport" finished-at="2024-04-03T09:42:42 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="clickOnIT()[pri:1, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:42:42 IST" name="clickOnIT" finished-at="2024-04-03T09:42:52 IST" duration-ms="10575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnIT -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:42:52 IST" name="getResult" finished-at="2024-04-03T09:42:55 IST" duration-ms="3147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnIT status=SUCCESS method=Global_IT.clickOnIT()[pri:1, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:42:55 IST" name="endReport" finished-at="2024-04-03T09:42:56 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="exploreApps()[pri:2, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:42:56 IST" name="exploreApps" finished-at="2024-04-03T09:43:27 IST" duration-ms="31745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exploreApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:27 IST" name="getResult" finished-at="2024-04-03T09:43:27 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exploreApps status=SUCCESS method=Global_IT.exploreApps()[pri:2, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:27 IST" name="endReport" finished-at="2024-04-03T09:43:28 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:28 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:43:28 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IT Outage Alert]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IT Outage Alerts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:28 IST" name="getResult" finished-at="2024-04-03T09:43:28 IST" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:28 IST" name="endReport" finished-at="2024-04-03T09:43:28 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:28 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:43:28 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Microsoft Teams]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Microsoft Teams]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:28 IST" name="getResult" finished-at="2024-04-03T09:43:29 IST" duration-ms="234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="endReport" finished-at="2024-04-03T09:43:29 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:43:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[One Drive]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[One Drive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="getResult" finished-at="2024-04-03T09:43:29 IST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="endReport" finished-at="2024-04-03T09:43:29 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:43:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global IT Internal Events]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Global IT Internal Events]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="getResult" finished-at="2024-04-03T09:43:29 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="endReport" finished-at="2024-04-03T09:43:29 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="validateApps" data-provider="titles" finished-at="2024-04-03T09:43:29 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Global Information Technology Documents]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[S&T Policy Hub]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateApps -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="getResult" finished-at="2024-04-03T09:43:29 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateApps status=SUCCESS method=Global_IT.validateApps(java.lang.String,java.lang.String)[pri:3, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="endReport" finished-at="2024-04-03T09:43:29 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="verifyNewsAvailability()[pri:4, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:29 IST" name="verifyNewsAvailability" finished-at="2024-04-03T09:43:30 IST" duration-ms="1141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewsAvailability -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:30 IST" name="getResult" finished-at="2024-04-03T09:43:31 IST" duration-ms="518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNewsAvailability status=SUCCESS method=Global_IT.verifyNewsAvailability()[pri:4, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:31 IST" name="endReport" finished-at="2024-04-03T09:43:31 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="verifyAwardsAvailability()[pri:5, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:31 IST" name="verifyAwardsAvailability" finished-at="2024-04-03T09:43:31 IST" duration-ms="318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAwardsAvailability -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:31 IST" name="getResult" finished-at="2024-04-03T09:43:31 IST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAwardsAvailability status=SUCCESS method=Global_IT.verifyAwardsAvailability()[pri:5, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:31 IST" name="endReport" finished-at="2024-04-03T09:43:31 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayNewsCount()[pri:6, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:31 IST" name="displayNewsCount" finished-at="2024-04-03T09:43:31 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayNewsCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:31 IST" name="getResult" finished-at="2024-04-03T09:43:32 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayNewsCount status=SUCCESS method=Global_IT.displayNewsCount()[pri:6, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:32 IST" name="endReport" finished-at="2024-04-03T09:43:32 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="validateNewsHeaderAndTooltip()[pri:7, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:32 IST" name="validateNewsHeaderAndTooltip" finished-at="2024-04-03T09:43:32 IST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateNewsHeaderAndTooltip -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:32 IST" name="getResult" finished-at="2024-04-03T09:43:32 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNewsHeaderAndTooltip status=SUCCESS method=Global_IT.validateNewsHeaderAndTooltip()[pri:7, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:32 IST" name="endReport" finished-at="2024-04-03T09:43:32 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:32 IST" name="displayAwards" data-provider="awards" finished-at="2024-04-03T09:43:43 IST" duration-ms="10527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rishabh Raj becomes EC Council Disaster Recovery Professional]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayAwards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:43 IST" name="getResult" finished-at="2024-04-03T09:43:43 IST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayAwards status=SUCCESS method=Global_IT.displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:43 IST" name="endReport" finished-at="2024-04-03T09:43:43 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:43 IST" name="displayAwards" data-provider="awards" finished-at="2024-04-03T09:43:54 IST" duration-ms="11019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IT Team Wins Two Awards at the DevOps India Summit 2023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayAwards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:54 IST" name="getResult" finished-at="2024-04-03T09:43:54 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayAwards status=SUCCESS method=Global_IT.displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:54 IST" name="endReport" finished-at="2024-04-03T09:43:54 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method signature="displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:43:54 IST" name="displayAwards" data-provider="awards" finished-at="2024-04-03T09:44:05 IST" duration-ms="11010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CInsights Wins the Prestigious Brandon Hall Award]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayAwards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:44:05 IST" name="getResult" finished-at="2024-04-03T09:44:05 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayAwards status=SUCCESS method=Global_IT.displayAwards(java.lang.String)[pri:8, instance:testScenario.Global_IT@4007f65e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:44:05 IST" name="endReport" finished-at="2024-04-03T09:44:05 IST" depends-on-methods="testScenario.Global_IT.getResult" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method is-config="true" signature="closeBrow()[pri:0, instance:testScenario.Global_IT@4007f65e]" started-at="2024-04-03T09:44:05 IST" name="closeBrow" finished-at="2024-04-03T09:44:17 IST" duration-ms="11282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrow -->
      </class> <!-- testScenario.Global_IT -->
    </test> <!-- EdgeTest -->
  </suite> <!-- mysuite -->
</testng-results>
